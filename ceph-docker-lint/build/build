#!/bin/bash

set -e
set -x

IGNORE_THESE_CODES="SC1091,SC2015,SC2009,SC2001"
IGNORE_THESE_FILES="variables_entrypoint.sh" # pipe-separated file names, e.g: foo|bar|foobar, this avoids shellcheck complaining that vars are not used (see: SC2034)

function generate_filelist(){
   if [[ "$pull_request_id" -eq "" || "${ghprbCommentBody:-}" = "jenkins lint all" ]]
   then
       find . -name '*.sh' | grep -vE "$IGNORE_THESE_FILES"
   else
       curl -XGET "https://api.github.com/repos/ceph/ceph-docker/pulls/$pull_request_id/files" |
       jq '.[].filename' |  # just the files please
       tr -d '"' |  # remove the quoting from JSON
       grep ".sh$" | # just the bash
       grep -vE "$IGNORE_THESE_FILES"
   fi

}

function check(){
    while read -r filename; do
        if [[ -z "$IGNORE_THESE_CODES" ]]
        then
            shellcheck -x "$filename";
        else
            shellcheck -x -e "$IGNORE_THESE_CODES" "$filename";
        fi
    done
    return $?
}

function main() {
# install some of our dependencies
if [ "${HUDSON_URL}" = "https://jenkins.ceph.com/" ]
then
    sudo yum -y install epel-release
    sudo yum -y install ShellCheck
    sudo yum -y install jq
    pull_request_id=${ghprbPullId:-$2}
    workspace=${WORKSPACE:-$1}
else
    if [[ ! -x $(which jq) ]]
    then
        echo 'install jq first'
        exit 1
    fi
    if [[ ! -x $(which shellcheck) ]]
    then
        echo 'install shellcheck first'
        exit 1
    fi
    pull_request_id=${ghprbPullId:-$2}
    workspace=${WORKSPACE:-$1}
fi


pushd "$workspace/ceph-docker"
generate_filelist | check
popd
exit $?
}

main "$@"
