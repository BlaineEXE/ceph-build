#! /usr/bin/bash
set -ex

# Only do actual work when we are a DEB distro
if test "$DISTRO" != "debian" -a "$DISTRO" != "ubuntu"; then
    exit 0
fi


## Install any setup-time deps
# TODO: add file to /etc/apt/sources.list.d/ to get repos for librgw-dev and libcephfs-dev and run sudo apt-get update

# We need this for system, to build ganesha, and to enable FSAL_CEPH and 
# FSAL_RGW in the .spec file when cmake command runs
sudo apt-get -y install "cmake equivs libkrb5-dev bison flex quilt
libdbus-1-dev libnfsidmap-dev libwbclient-dev libntirpc-dev (>= 1.4.3) libattr1-dev libacl1-dev libcap-dev glusterfs-common (>= 3.8.4) python-qt4 pyqt4-dev-tools pkgconf
librgw-dev libcephfs-dev"

# Normalize variables across rpm/deb builds
NORMAL_DISTRO=$DISTRO
NORMAL_DISTRO_VERSION=$DIST
NORMAL_ARCH=$ARCH

# create build status in shaman
create_build_status "started" "nfs-ganesha" $NORMAL_DISTRO $NORMAL_DISTRO_VERSION $NORMAL_ARCH

## Setup the pbuilder
setup_pbuilder


## Build the source tarball

cd $WORKSPACE/nfs-ganesha

git submodule update --init || git submodule sync

mkdir build
cd build

# make source tarball
cmake -DCMAKE_BUILD_TYPE=Maintainer -DUSE_FSAL_GLUSTER=OFF -DUSE_FSAL_CEPH=ON -DUSE_FSAL_RGW=ON $WORKSPACE/nfs-ganesha/src && make dist || exit 1

# move unpacked tarball code into nfs-ganesha-debian/src
VERSION=`grep -om 1 '[[:digit:]]\+\.[[:digit:]]\+-dev-[[:digit:]]\+' $WORKSPACE/nfs-ganesha/build/CPackSourceConfig.cmake | sed s/-//g`
BUILD=`grep -om 1 "[[:digit:]]\+-g\w\w\w\w\w\w\w" $WORKSPACE/nfs-ganesha/build/include/config.h`
NFS_GANESHA_ORIG_TAR_GZ="nfs-ganesha_${VERSION}.orig.tar.gz"
NFS_GANESHA_SOURCE_DIR=`grep -om 1 'nfs-ganesha-[[:digit:]]\+\.[[:digit:]]\+-dev-[[:digit:]]\+-[[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+-Source' $WORKSPACE/nfs-ganesha/build/CPackSourceConfig.cmake`
tar xzf ${NFS_GANESHA_SOURCE_DIR}.tar.gz
mv ${NFS_GANESHA_SOURCE_DIR}.tar.gz ${NFS_GANESHA_ORIG_TAR_GZ}
mv ${NFS_GANESHA_SOURCE_DIR} nfs-ganesha-${VERSION}
rm -rf $WORKSPACE/nfs-ganesha-debian/debian/patches
mv $WORKSPACE/nfs-ganesha-debian/debian $WORKSPACE/nfs-ganesha/build/nfs-ganesha-${VERSION}/debian

## Get some basic information about the system and the repository
DEB_ARCH=$(dpkg-architecture -qDEB_BUILD_ARCH)

cd $WORKSPACE/nfs-ganesha-debian

## Prepare the debian files
# Bump the changelog
dch -v "$VERSION-$BUILD" "New release ($VERSION)"

# Create .dsc and source tarball
sudo dpkg-buildpackage -S -us -uc -d

## Build with pbuilder
echo "Building debs"

PBUILDDIR="/srv/debian-base"

sudo pbuilder --clean

mkdir -p $WORKSPACE/dist/deb

# use libcephfs and librgw from shaman
REPO_URL="https://shaman.ceph.com/api/repos/ceph/$CEPH_BRANCH/$CEPH_SHA1/$DISTRO/$DIST/repo"
echo "EXTRAPACKAGES=\"libcephfs-dev librgw-dev\"" >> ~/.pbuilderrc
echo "OTHERMIRROR=deb ${REPO_URL}" >> ~/.pbuildrrc

echo "Building debs for $DIST"
sudo pbuilder build \
    --distribution $DIST \
    --basetgz $PBUILDDIR/$DIST.tgz \
    --buildresult $WORKSPACE/dist/deb/ \
    --debbuildopts "-j`grep -c processor /proc/cpuinfo`" \
    $WORKSPACE/dist/nfs-ganesha_$VERSION.dsc


## Upload the created RPMs to chacra
chacra_endpoint="nfs-ganesha/${NFS_GANESHA_BRANCH}/${GIT_COMMIT}/${DISTRO}/${DIST}"
# TODO: change this
bpvers="foo"
#bpvers=`gen_debian_version $debian_version $DIST`

[ "$FORCE" = true ] && chacra_flags="--force" || chacra_flags=""

# push binaries to chacra

if [ "$THROWAWAY" = false ] ; then
    # push binaries to chacra
    find $WORKSPACE/dist/deb | egrep "*\.(changes|deb|dsc|gz)$" | egrep -v "(Packages|Sources|Contents)" | $VENV/chacractl binary ${chacra_flags} create ${chacra_endpoint}
    # write json file with build info
    # version and package_manager version are needed for teuthology
    cat > $WORKSPACE/repo-extra.json << EOF
{
    "version":"$VERSION",
    "package_manager_version":"$bpvers",
    "build_url":"$BUILD_URL",
    "root_build_cause":"$ROOT_BUILD_CAUSE",
    "node_name":"$NODE_NAME",
    "job_name":"$JOB_NAME"
}
EOF
    # post the json to repo-extra json to chacra
    curl -X POST -H "Content-Type:application/json" --data "@$WORKSPACE/repo-extra.json" -u $CHACRACTL_USER:$CHACRACTL_KEY ${chacra_url}/repos/${chacra_endpoint}/extra/
    # start repo creation
    $VENV/chacractl repo update ${chacra_endpoint}
fi

echo Check the status of the repo at: https://shaman.ceph.com/api/repos/${chacra_endpoint}

# update shaman with the completed build status
SHA1=${GIT_COMMIT}
update_build_status "completed" "nfs-ganesha" $NORMAL_DISTRO $NORMAL_DISTRO_VERSION $NORMAL_ARCH

sudo rm -rf $WORKSPACE/dist
