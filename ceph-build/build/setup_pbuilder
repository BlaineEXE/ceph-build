#!/bin/sh -x
# This file will set the tgz images needed for pbuilder on a given host. It has
# some hard-coded values like `/srv/debian-base` because it gets built every
# time this file is executed - completely ephemeral.  If a Debian host will use
# pbuilder, then it will need this. Since it is not idempotent it makes
# everything a bit slower. ## FIXME ##

set -e

# Only run when we are a Debian or Debian-based distro
if test -f /etc/redhat-release ; then
    exit 0
fi

basedir="/srv/debian-base"

# Ensure that the basedir directory exists
sudo mkdir -p "$basedir"

# This used to live in a *file* on /srv/ceph-build as
# /srv/ceph-build/update_pbuilder.sh Now it lives here because it doesn't make
# sense to have a file that lives in /srv/ that we then concatenate to get its
# contents.  what.
# By using $DIST we are narrowing down to updating only the distro image we
# need, unlike before where we updated everything on every server on every
# build.

os="debian"
[ "$DIST" = "precise" ] && os="ubuntu"
[ "$DIST" = "saucy" ] && os="ubuntu"
[ "$DIST" = "trusty" ] && os="ubuntu"

if [ $os = "debian" ]; then
    mirror="http://www.gtlib.gatech.edu/pub/debian"
else
    mirror="http://us.archive.ubuntu.com/ubuntu"
fi

# ensure that the tgz is valid, otherwise remove it so that it can be recreated
# again
pbuild_tar="$basedir/$DIST.tgz"
is_not_tar=`python -c "exec 'try: import tarfile;print int(not int(tarfile.is_tarfile(\"$pbuild_tar\")))\nexcept IOError: print 1'"`
file_size_kb=`du -k "$pbuild_tar" | cut -f1`

if $is_not_tar; then
    sudo rm -f "$pbuild_tar"
fi

if [ $file_size_kb -lt 1 ]; then
    sudo rm -f "$pbuild_tar"
fi

sudo pbuilder --clean

if [ -e $basedir/$DIST.tgz ]; then
    echo updating $DIST base.tgz
    sudo pbuilder update \
    --basetgz $basedir/$DIST.tgz \
    --distribution $DIST \
    --mirror "$mirror"
else
    echo building $DIST base.tgz
    sudo pbuilder create \
    --basetgz $basedir/$DIST.tgz \
    --distribution $DIST \
    --mirror "$mirror"
fi
