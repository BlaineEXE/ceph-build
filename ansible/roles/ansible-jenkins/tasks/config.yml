---

- name: Configure Jenkins Port
  lineinfile:
    dest: '{{ jenkins.apt.config_file }}'
    regexp: ^HTTP_PORT=
    line: HTTP_PORT={{jenkins_port}}
    backrefs: yes
  register: config_changed

- name: Configure Jenkins Prefix
  when: prefix is defined
  lineinfile:
    dest: '{{ jenkins.apt.config_file }}'
    regexp: ^PREFIX=
    line: PREFIX={{prefix}}
    backrefs: yes

- name: Set the amount of RAM
  when: xmx is defined
  lineinfile:
    dest: '{{ jenkins.apt.config_file }}'
    regexp: ^JENKINS_JAVA_OPTIONS
    line: 'JENKINS_JAVA_OPTIONS="-Xmx{{xmx}}m -Djava.awt.headless=true"'
    backrefs: yes

- name: Configure Jenkins E-mail
  when: email is defined
  template:
    src: hudson.tasks.Mailer.xml.j2
    dest: '{{ jenkins_lib }}/hudson.tasks.Mailer.xml'
    owner: jenkins
    group: jenkins
    mode: 0644

- name: "copy JJB config file to {{ jenkins_jobs }}"
  synchronize:
    src: jobs/jenkins-job-builder
    dest: '{{ jenkins_jobs }}'
    owner: no
    group: no

- name: "ensure correct ownership of {{ jenkins_jobs }}"
  file:
    path: '{{ jenkins_jobs }}'
    state: directory
    owner: jenkins
    group: jenkins
    recurse: yes
  notify:
    - restart jenkins

# Handle plugins
- name: "{{ startup_delay_s | default(10) }}s delay while starting Jenkins"
  wait_for:
    host: localhost
    port: '{{ jenkins_port }}'
    delay: '{{ startup_delay_s | default(10) }}'
  when: jenkins_install.changed or config_changed.changed

- name: "Create Jenkins CLI destination directory: {{ jenkins_dest }}"
  file:
    path: '{{ jenkins_dest }}'
    state: directory

- name: Get Jenkins CLI
  get_url:
    url: http://localhost:{{ jenkins_port }}/jnlpJars/jenkins-cli.jar
    dest: '{{ jenkins.cli_dest }}'
    mode: 0440
  register: jenkins_local_cli
  until: "'OK' in jenkins_local_cli.msg or 'file already exists' in jenkins_local_cli.msg"
  #retries: 5
  #delay: 10
  ignore_errors: true

- name: Get Jenkins updates
  get_url:
    url: http://updates.jenkins-ci.org/update-center.json
    dest: '{{ jenkins.updates_dest }}'
    thirsty: yes
    mode: 0440
    timeout: 30
  register: jenkins_updates

- name: Update-center Jenkins
  shell: "cat {{ jenkins.updates_dest }} | sed '1d;$d' | curl -X POST -H 'Accept: application/json' -d @- http://localhost:{{ jenkins_port }}/updateCenter/byId/default/postBack"
  when: jenkins_updates.changed
  notify:
    - 'restart jenkins'

- name: create a jenkins-build user
  user:
    name: jenkins-build
    comment: "Jenkins Build Slave User"

- name: Create .ssh directory
  file:
    path: /home/jenkins-build/.ssh
    state: directory

- name: set the authorized keys '{{ playbook_dir }}/ansible-jenkins/files/ssh/keys/jenkins_build.pub'
  authorized_key:
    user: jenkins-build
    key: "{{ lookup('file', 'ssh/keys/jenkins_build.pub') }}"
  tags: fix

