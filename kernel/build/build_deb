#!/bin/bash
set -ex

cd $WORKSPACE

get_bptag() {
    dist=$1

    [ "$dist" = "sid" ] && dver=""
    [ "$dist" = "jessie" ] && dver="~bpo80+1"
    [ "$dist" = "wheezy" ] && dver="~bpo70+1"
    [ "$dist" = "squeeze" ] && dver="~bpo60+1"
    [ "$dist" = "lenny" ] && dver="~bpo50+1"
    [ "$dist" = "xenial" ] && dver="$dist"
    [ "$dist" = "trusty" ] && dver="$dist"
    [ "$dist" = "saucy" ] && dver="$dist"
    [ "$dist" = "precise" ] && dver="$dist"
    [ "$dist" = "oneiric" ] && dver="$dist"
    [ "$dist" = "natty" ] && dver="$dist"
    [ "$dist" = "maverick" ] && dver="$dist"
    [ "$dist" = "lucid" ] && dver="$dist"
    [ "$dist" = "karmic" ] && dver="$dist"

    echo $dver
}


# slap -rc to the ref if we are doing a release-candidate build
chacra_ref="$BRANCH"
[ "$RC" = true ] && chacra_ref="$BRANCH-rc"
[ "$TEST" = true ] && chacra_ref="test"

DEB_ARCH=$(dpkg-architecture -qDEB_BUILD_ARCH)
DISTRO=""
case $DIST in
    jessie|wheezy)
        DISTRO="debian"
        ;;
    *)
        DISTRO="ubuntu"
        ;;
esac

debian_version=${VERSION}-1

gen_debian_version() {
    raw=$1
    dist=$2

    [ "$dist" = "sid" ] && dver="$raw"
    [ "$dist" = "jessie" ] && dver="$raw~bpo80+1"
    [ "$dist" = "wheezy" ] && dver="$raw~bpo70+1"
    [ "$dist" = "squeeze" ] && dver="$raw~bpo60+1"
    [ "$dist" = "lenny" ] && dver="$raw~bpo50+1"
    [ "$dist" = "precise" ] && dver="$raw$dist"
    [ "$dist" = "saucy" ] && dver="$raw$dist"
    [ "$dist" = "trusty" ] && dver="$raw$dist"
    [ "$dist" = "xenial" ] && dver="$raw$dist"

    echo $dver
}

BPVER=`gen_debian_version $debian_version $DIST`

chacra_endpoint="kernel/${BRANCH}/${GIT_COMMIT}/${DISTRO}/${DIST}"
chacra_check_url="${chacra_endpoint}/kernel_${BPVER}_${DEB_ARCH}.deb"

if [ "$THROWAWAY" = false ] ; then
    # this exists in scripts/build_utils.sh
    check_binary_existence $chacra_check_url
fi

HOST=$(hostname --short)
echo "Building on $(hostname)"
echo "  DIST=${DIST}"
echo "  DEB_ARCH=${DEB_ARCH}"
echo "  WS=$WORKSPACE"
echo "  PWD=$(pwd)"
echo "*****"
env
echo "*****"

# Install build dependencies
sudo apt-get install -y bc

# Clean the upper level debs
rm -f ../*.deb

# Build the debs
echo "Building DEBs"
make bindeb-pkg

# Make sure we execute at the top level directory
cd "$WORKSPACE"

[ "$FORCE" = true ] && chacra_flags="--force" || chacra_flags=""

if [ "$THROWAWAY" = false ] ; then
    # push binaries to chacra
    find ../*.deb | $VENV/chacractl binary ${chacra_flags} create ${chacra_endpoint}/${ARCH}/

    # start repo creation
    $VENV/chacractl repo update ${chacra_endpoint}

    echo Check the status of the repo at: https://shaman.ceph.com/api/repos/${chacra_endpoint}
fi
