set -e

pkgs=( "chacractl>=0.0.4" )
install_python_packages "pkgs[@]"

# create the .chacractl config file using global variables
make_chacractl_config

echo "Building ${BRANCH}"
rm -f ${WORKSPACE}/*.deb ${WORKSPACE}/calamari-repo-trusty.tar.gz
cd ${WORKSPACE}/

sudo apt-get -y install python-software-properties
sudo add-apt-repository -y ppa:saltstack/salt
sudo apt-get update
wget -q -O- 'https://download.ceph.com/keys/release.asc' | sudo apt-key add -
ssh-keyscan $(hostname -f)| sudo tee -a /root/.ssh/known_hosts
sudo apt-get -y install salt-minion salt-common python-jinja2 multitee

sudo -E salt-call --local --file-root=$(pwd)/vagrant/trusty-build/salt/roots state.highstate | multitee 0-1,4 4>/tmp/${BUILD_TAG}.out

errs=$(sed --regexp-extended -n 's/^Failed:[[:space:]]+([[:digit:]]+)/\1/p' < /tmp/${BUILD_TAG}.out)
rm /tmp/${BUILD_TAG}.out
if [ $errs != 0 ] ; then echo "$errs HIGHSTATE ERRORS, BUILD FAILED"; exit 1; fi
cd $WORKSPACE
rm -rf $BRANCH
mkdir $BRANCH
mv pkgs/*deb $BRANCH

[ "$TEST" = true ] && chacra_ref="test" || chacra_ref="$BRANCH"
DISTRO=`python -c "exec 'import platform; print platform.linux_distribution()[0].lower()'"`
chacra_endpoint="calamari-server/${chacra_ref}/${GIT_COMMIT}/${DISTRO}/universal/all"

[ "$FORCE" = true ] && chacra_flags="--force" || chacra_flags=""

# push binaries to chacra
find "$BRANCH" | grep 'deb$' | $VENV/chacractl binary ${chacra_flags} create ${chacra_endpoint}
