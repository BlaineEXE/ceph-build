#!/bin/bash
# There has to be a better way to do this than this script which just looks
# for every Vagrantfile in scenarios and then just destroys whatever is left.

# the following two methods exist in scripts/build_utils.sh
pkgs=( "github-status" )
install_python_packages "pkgs[@]"

GITHUB_STATUS_STATE="failure" $VENV/github-status create

cd $WORKSPACE/src/ceph-volume/tests/functional

scenarios=$(find . | grep Vagrantfile | xargs dirname)

for scenario in $scenarios; do
    cd $scenario
    vagrant destroy -f
    cd -
done

# Sometimes, networks may linger around, so we must ensure they are killed:
networks=`sudo virsh net-list --all | grep active | egrep -v "(default|libvirt)" | cut -d ' ' -f 2`
for network in $networks; do
    sudo virsh net-destroy $network || true
    sudo virsh net-undefine $network || true
done

